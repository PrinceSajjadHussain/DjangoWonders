# version: '3.8'

# services:
#   elasticsearch:
#     image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
#     container_name: elasticsearch
#     environment:
#       - node.name=es01
#       - cluster.name=es-cluster
#       - discovery.type=single-node
#       - ELASTIC_PASSWORD=Rw114477
#       - xpack.security.enabled=false
#     ports:
#       - "9200:9200"
#     volumes:
#       - esdata1:/usr/share/elasticsearch/data
#     networks:
#       - mynetwork

#   kibana:
#     image: docker.elastic.co/kibana/kibana:8.6.0
#     container_name: kibana
#     environment:
#       - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#       - ELASTICSEARCH_API_KEY=rbqpVSKSSd22lJfNjW9Ytw
#     ports:
#       - "5601:5601"
#     depends_on:
#       - elasticsearch
#     networks:
#       - mynetwork

#   app:
#     build: .
#     container_name: fastapi_app
#     ports:
#       - "7010:7010"
#     depends_on:
#       - elasticsearch
#     volumes:
#       - ./cert.pem:/app/certs/certfile.pem
#       - ./key.pem:/app/certs/keyfile.pem
#     networks:
#       - mynetwork

# volumes:
#   esdata1:
#     driver: local

# networks:
#   mynetwork:
#     driver: bridge


version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    container_name: elasticsearch
    environment:
      - node.name=es01
      - cluster.name=es-cluster
      - discovery.type=single-node
      - ELASTIC_PASSWORD=Rw114477
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    networks:
      - mynetwork

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_API_KEY=rbqpVSKSSd22lJfNjW9Ytw
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - mynetwork

  app:
    build: .
    container_name: fastapi_app
    ports:
      - "7010:7010"
    depends_on:
      - elasticsearch
    volumes:
      - ./cert.pem:/app/certs/certfile.pem
      - ./key.pem:/app/certs/keyfile.pem
    networks:
      - mynetwork

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - mynetwork

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - mynetwork

volumes:
  esdata1:
    driver: local

networks:
  mynetwork:
    driver: bridge
